10000 REM ************ chk_cfg.rtn 31/01/2013 21:00:00 ************ 
55555 REM Please keep line 10000 updated when changes are made. Volodya Savastiouk
10010 REM               MKII/MKIII/MKIV Single board cfg file constants printout
10020 REM
10030 REM            (Volodya Jan.2013)
10040 REM
10050 REM ************************************************************
10070 REM
10080 REM  This routine reads some constants from a Brewer cfg (new
10090 REM  electronics only) and displays them onscreen and on the
10100 REM  printer.
10300 REM
10310 REM  Global Variables Referenced:
10320 REM    IO MU PC SP TIMER T1 ULAST VA ZA ZERO
10330 REM    A1$() C$ CR$ DD$ DQ$ JD$ MC$ M8$ NO$ O1$ TE$
10340 REM    TIME$ TR$ UF$ UTIME$ UVR$ YF$
10350 REM    DN% DV% HF% MX% MZ% Q8% TE% UC% ZU%
10360 REM
10370 REM  Exits: 11020, 11120, 11220, 20020
10380 REM
10390 REM  Uses: 50,  2090,2450,3100,3900,4450,6610,6635,
10400 REM        6650,6700,7000,7750,9190,9450,9500,9650,
10410 REM        9800,9810,9870,response file
10500 REM ************************************************************
10510 REM  History: dd/mm/yy
55555 REM  31/01/13 Volodya created a new routine
10520 REM  
10530 REM ************************************************************
11000 '
11001 ' *** Setup ***
11002 '
11010 DATA chk_cfg
11100 IF Q14%=1 THEN 12000
11110   B$="Old Brewers have no cfg file to read":PRINT#4,B$:PRINT B$
11120   X=2:GOSUB 7220:RETURN
12000 '
12001 ' *** Setup ***
12002 '
12010 CLS:PRINT CL$:K=0
12020 B$=TIME$+"  Brewer Instrument CFG "
12030 LOCATE 6,4:PRINT B$;" (Press HOME to abort)":IF FP%>0 THEN PRINT#4,B$
12040 IF RM%=1 THEN 13000
13000 '
13001 ' *** Read the CFG ***
13002 '
13010 GOSUB 2090:IF HF%<>0 THEN 14000
13011 CFG.R$="VERSION.FW[VERS]": GOSUB 13220
13012 CFG.R$="VERSION.FW[REL]": GOSUB 13220
13015 CFG.R$="MOTOR.MAX.ACC[10]": GOSUB 13220
13020 CFG.R$="MOTOR.MAX.ACC[9]": GOSUB 13220
13025 CFG.R$="MOTOR.MAX.VEL[10]": GOSUB 13220
13030 CFG.R$="MOTOR.MAX.VEL[9]": GOSUB 13220
13035 CFG.R$="MOTOR.MAX.JERK[10]": GOSUB 13220
13040 CFG.R$="MOTOR.MAX.JERK[9]": GOSUB 13220
13045 CFG.R$="MOTOR.MAX.POS[10]": GOSUB 13220
13050 CFG.R$="MOTOR.MAX.POS[9]": GOSUB 13220
13055 CFG.R$="MOTOR.MIN.POS[10]": GOSUB 13220
13060 CFG.R$="MOTOR.MIN.POS[9]": GOSUB 13220
13065 CFG.R$="MOTOR.SLOPE[10]": GOSUB 13220
13070 CFG.R$="MOTOR.SLOPE[9]": GOSUB 13220
13075 CFG.R$="MOTOR.REF.PLAY[10]": GOSUB 13220
13080 CFG.R$="MOTOR.REF.PLAY[9]": GOSUB 13220
13095 CFG.R$="MOTOR.MAX.SEARCH[10]": GOSUB 13220
13100 CFG.R$="MOTOR.MAX.SEARCH[9]": GOSUB 13220
13105 CFG.R$="MOTOR.INITIAL[10]": GOSUB 13220
13110 CFG.R$="MOTOR.INITIAL[9]": GOSUB 13220
13115 CFG.R$="MOTOR.ORIGIN[10]": GOSUB 13220
13120 CFG.R$="MOTOR.ORIGIN[9]": GOSUB 13220
13125 CFG.R$="MOTOR.SLOW.VEL[10]": GOSUB 13220
13130 CFG.R$="MOTOR.SLOW.VEL[9]": GOSUB 13220
13135 CFG.R$="MOTOR.RESET.POS[10]": GOSUB 13220
13140 CFG.R$="MOTOR.RESET.POS[9]": GOSUB 13220
13200 GOTO 14000
13220 O1$="?"+CFG.R$:GOSUB 9450:A$=R$+CHR$(0):I=INSTR(I1$,A$):A$=LEFT$(I1$,I-1)
13230 K=K+1:IF K>=16 THEN K=0
13240 LOCATE 9+K,1:PRINT CFG.R$+"="+LEFT$(A$,78):B$=CFG.R$+"="+A$:GOSUB 3050:IF FP%>0 THEN PRINT#4,B$
13250 LOCATE 10+K,1:A$="             ":PRINT A$;A$;A$;A$;A$;A$
13260 RETURN
14000 '
14001 ' *** Clean Up ***
14002 CFG.R$=""
14010 IF RM%=1 THEN X=2:GOSUB 7220:RETURN
14040 RETURN
65529 REM proper last line
