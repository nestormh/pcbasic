10000 REM ************ re-mb.rtn 21/04/2012 19:47:08 ************ 
55555 REM Please keep line 10000 updated when changes are made. Volodya Savastiouk
55555 REM     MKII/MKIII/MKIV Reset MB Brewer and Motor Initialization
55555 REM                 (SCI-TEC/IOS, Oct. 2007)
55555 REM **************************************************************
55555 REM
55555 REM  This routine performs a reset on all Brewer motors, except
55555 REM  the micrometer(s).
55555 REM
55555 REM  Global Variables Used:
55555 REM    AD   BV   IO   QC   QR   SP   TA   TD
55555 REM    AZ%  CP%  IS%  TH%  UC%  ZE%
55555 REM    A1$()CL$  CP$  G$() I$   I1$  M1$ - M5$  M9$  O1$  TR$
55555 REM
55555 REM  Exits: 11010, 15030
55555 REM
55555 REM  Uses: 3220, 3300, 3400, 7000, 7050, 9270, 9300, 9450, 9500,
55555 REM        9891
55555 REM
55555 REM **************************************************************
55555 REM  History: dd/mm/yy
55555 REM 21/04/12 Volodya - now added restoring the motor positions after RE
55555 REM 20/10/07 Volodya - 3.76b now RE is separate for SB and MB Brewers
55555 REM 12/01/03 ken - IOS-uart board Q16%=1, line 13021
55555 REM 21/12/99 ken - add E command for Ze/Az faster reset
55555 REM 18 6 98 julian change re and main for better reset
55555 REM  7/1/97 -julian Change MTRUPD slit mask driving routine.
55555 REM  10/11/96 - remove fill characters -julian
55555 REM  25/10/95 - Resets FW#3, Iris/FW1,2 better
55555 REM  23/01/95 - Supports new Brewer electronics
55555 REM  05/01/95 - Writes AZ/ZE information to B file
55555 REM  05/10/94 - Resets everything except MIC#1, (MIC#2), FW#3
55555 REM  12/09/94 - Reorganized code, moved firmware fix to start of
55555 REM  code, better zenith zeroing, don't move az/ze if aborted
55555 REM  28/02/94 - Bug fix line 19160, New header, comments added,
55555 REM  lines renumbered, zenith motor zeroing sequence improved
55555 REM **************************************************************
11000 DATA re
11005 IF Q14%=1 THEN PRINT#4, "This reset routine is intended for the multiple-board Brewers only.  Cannot continue." RETURN:
11010 IF Q12%=1 THEN RETURN:REM Don't reset in NOBREW mode operation
11015 IF REFLAG% > 0 AND SK$<>"" THEN B$="Previous RE didn't seem to help, so not doing reset again. Operator intervention required. Quitting to menu.": REFLAG% = 0: HF%=1: NEED.FR=0: NEED.HG=0: PRINT #4, B$: GOSUB 3050: RETURN
11020 KEY OFF
12000 '
55555 ' *** Verify Communications ***
12002 '
12010 UC%=0:TH%=0:TI=TIMER*60:FH%=0:IF CL$="" THEN GOSUB 2500
13000 '
55555 ' *** Reset The Brewer ***
13002 '
13010 PRINT CL$:FH%=FH%+1: IF FH%>10 THEN B$="Reset failed "+STR$(FH%)+" times. Quitting and going to the menu.": PRINT #4, B$: GOSUB 3050:HF%=1:REFLAG% = 0: HF%=1: NEED.FR=0: NEED.HG=0: RETURN
13015 CLOSE 7:OPEN "com"+CP$+":300,n,8,1,rs,ds,cs,cd" AS 7
13021 IF Q16%=1 THEN CLOSE 7:OPEN "com"+CP$+":1200,n,8,1,rs,ds,cs,cd" AS 7
13025 ON COM(CP%) GOSUB 9300
13040   BV=INP(AD):OUT AD,(BV OR 64):TA=420:GOSUB 7050
13050   GOSUB 9891:TI=TIMER*60:IF TI>=TA THEN 13070
13060   LOCATE 6,SP:PRINT "Reset in";INT(.9+(TA-TI)/60);"seconds (attempt";FH%;")      ":GOTO 13050
13070 LOCATE 8,SP:PRINT "Asking Brewer to respond";:TD=1000:IF Q2%=1 THEN PRINT " (Tracker should be ON)"
13080 GOSUB 7000:BV=INP(AD):OUT AD,(BV AND 191)
13090 IS%=42:COM(CP%) ON
55555 ' retry
13100 GOSUB 9891:IF TIMER*60>TD THEN 13000
13110 LOCATE 10,SP:PRINT INT(.9+(TD-TIMER*60)/60);"seconds  ":IF IS%=42 THEN 13100
55555 REM startup msg
13120 I$="":IF(LEN(I1$)>3) THEN I$=LEFT$(I1$,LEN(I1$)-3)
13126 PRINT CL$:LOCATE 6,SP:PRINT I$
13130 PRINT I$:PRINT#4,I$
13140 PRINT "Changing baudrate"
13145 GOSUB 9270
13146 PRINT "Baudrate changed":GOTO 13190
55555 REM clear port
13160 X=1:GOSUB 7220:X=LOC(7):IF X>0 THEN A$=INPUT$(X,7)
13170 PRINT "Please wait (this may take a minute)..."
13180 GOSUB 9270:O1$="B,0":GOSUB 9450:IF Q14%=1 THEN 14000
13190 O1$="L,16905,90,18041,"+DL$+",16953,110,18057,64,16977,90":GOSUB 9450
13200 O1$="L,20372,137,20373,226,20374,115,20375,248,20376,22":GOSUB 9450
13210 O1$="L,20377,169,20378,52,20379,162,20380,41,20381,137":GOSUB 9450
13220 O1$="L,20382,58,20383,154,20384,18,20385,213,20386,18":GOSUB 9450
13230 O1$="L,20387,2,20388,169,20389,233,20390,192,20391,77":GOSUB 9450
13240 O1$="L,20392,101,19810,192,19811,79,19812,148":GOSUB 9450
13250 O1$="L,19413,0,19414,255":GOSUB 9450
13255 GOSUB 40000
13260 GOSUB 3300:GOTO 14000:KEY OFF
14000 '
55555 ' *** Initialize Motors ***
14002 '
14010 KEY OFF
14020 PRINT CL$:LOCATE ,SP:PRINT"*** Initializing Brewer motors ***"
14030 M3$="0"+"":M4$=M3$:M5$=M3$:M9$=M3$:M1$=M3$:M2$=M3$
14040 O1$="M,3,0:I,4:I,5:B,0:R,0,7,1:R,1,1,1":GOSUB 9450:GOSUB 9750
14050 O1$="M,4,324:M,4,-324:M,5,324:M,5,-324:M,4,3:M,4,-1:M,5,3:M,5,-1":GOSUB 9450
15000 '
55555 ' *** Zeroing Zenith Motor ***
55555 '
55555 ' Note: this subroutine is taken directly from ZE.RTN
55555 '
55555 REM No zenith motor present
15010 IF Q1%=0 THEN 16000
15020 PRINT CL$:LOCATE ,SP:PRINT"Zeroing zenith":MS%=0:A$="101":IF ZE%>ER%*2/3 THEN A$="1"
55555 REM advance motor and test
15040 O1$="M,1,-1:M,1,"+A$+":G,800":MS%=MS%-VAL(A$)+1:GOSUB 9450:GOSUB 9190
15050 GOSUB 2090:IF (VA AND B6%)<>B6% OR TA%=1 THEN 15800
15060 :
15061 O1$="E,1":GOSUB 9450:PRINT#4,VA
15062 MS%=MS%+ABS(VA):IF ABS(VA)=15104 THEN PRINT"Zenith motor didn't find diode.Exiting...":GOTO 15800
15063 PRINT#4,"Zenith diode found at :";MS%
15290 O1$="M,1,-"+STR$(ZO%):GOSUB 9450:MS%=MS%+ZO%
15300 :
15310 PRINT CL$:LOCATE ,SP:B$="Zenith discrepancy = "+STR$(ZE%-MS%)
15320 PRINT B$:PRINT#4,"Zenith zeroed at ";TIME$;" ";B$
15330 GOSUB 3050
15340 TA%=0:ZE%=0:GOTO 16000
15350 :
15800 REM *** Zenith zeroing (non-critical) failure
15800 LOCATE ,SP:ZE%=ZE%-MS%
15820 IF TA%=0 THEN B$="Zenith ZEROING FAILURE !!":PRINT B$:PRINT#4,B$:GOSUB 3050
15830 IF TA%=1 THEN TA%=0:PRINT "Aborted":PRINT#4, "Zenith zeroing aborted"
15840 X=1:GOSUB 7220:GOTO 16000
16000 '
55555 ' *** Zeroing Azimuth Motor ***
55555 '
55555 ' Note: this subroutine is taken directly from AZ.RTN
55555 '
16010 GOSUB 2300:IF Q2%=0 THEN 17000
16020 PRINT CL$:LOCATE ,SP:PRINT"Zeroing azimuth"
55555 REM Speed up motor for azimuth
16030 MS%=0:O1$="L,19413,0,19414,200":GOSUB 9400
16040 IF AZ%>(SR%*.8) THEN O1$="M,2,-"+STR$(INT(SR%*.2)):GOSUB 9450:MS%=(SR%*.2)
16050 :
16082 O1$="M,2,-1:G,800":GOSUB 9450:MS%=MS%+1
16084 IF (VA AND B5%)=B5% THEN O1$="M,2,300":GOSUB 9450:MS%=MS%-300
16085 O1$="G,800":GOSUB 9450:IF (va and b5%)=b5% THEN PRINT #4, "Azimuth not moving - maybe disconnected. Exiting....": GOTO 16800
16090 :
16091 O1$="E,2":GOSUB 9450:PRINT VA,MS%,AZ%:PRINT#4, VA,MS%,AZ%
16092 MS%=MS%+ABS(VA):IF ABS(VA)=15104 THEN PRINT#4,"Azimuth failed, maybe off or at safety switch...":GOTO 16800
16093 PRINT#4,"Azimuth diode found at :";MS%
16330 PRINT CL$:LOCATE ,SP:B$="Azimuth discrepancy = "+STR$(AZ%-MS%)
16340 PRINT B$:PRINT"Positioning Tracker to sun":PRINT#4,"Azimuth zeroed at ";TIME$;" ";B$
16350 GOSUB 3050
16360 TA%=0:GOTO 17000
16370 :
16800 REM *** Azimuth zeroing (non-critical) failure
16800 LOCATE ,SP:AZ%=AZ%-MS%
16820 IF TA%=0 THEN B$="Azimuth tracker ZEROING FAILURE !!":HF%=1:PRINT B$:PRINT#4,B$:GOSUB 3050
16830 IF TA%=1 THEN TA%=0:PRINT "Aborted":PRINT#4, "Azimuth zeroing aborted"
16840 X=1:GOSUB 7220:GOTO 17000
17000 '
18000 '
55555 ' *** Quit ***
55555 '
18010 IF Q14%=0 THEN O1$="L,19413,0,19414,255":GOSUB 9450:REM slow motor
18020 IF TYP$<>"mkii" AND Q9%=1 THEN GOSUB 30000
18030 AP%=0:GOSUB 3220: IF NEED.FR > 2 THEN REFLAG% = REFLAG% + 1
18035 NEED.HG=1:HP.NOTDONE=1:NEED.FR = 0
18040 TR$="sa":GOSUB 7750: RETURN
30000 '
55555 ' *** Zero Filterwheel #3 ***
55555 REM Remember pos of first micrometer
30020 IF TYP$="mkiii" THEN O1$="M,10,-" + MC$: GOSUB 9450
30030 PRINT CL$;"Trying to zero filterwheel #3":PRINT#4,"Trying to zero filterwheel #3":Y=9
30040 IF TYP$="mkiv" THEN O1$="M,6,-1:M,6,10:G,800" ELSE O1$="B,3:M,10,-1:M,10,10:G,544"
30050 GOSUB 9450:GOSUB 9190
30060 YY=VA:PRINT Y
30070 IF TYP$="mkiv" THEN O1$="M,6,-25:G,800" ELSE O1$="B,3:M,10,-25:G,544"
30080 Y=Y-25:GOSUB 9450:GOSUB 9190
30090 IF Y<-600 THEN PRINT#4, "Filterwheel #3 diode not found":GOTO 31000
30100 IF(YY-VA)<>32 THEN 30060
30110 IF TYP$="mkiv" THEN O1$="M,6,25:G,800" ELSE O1$="B,3:M,10,25:G,544"
30120 Y=Y+25:GOSUB 9450:GOSUB 9190
30130 YY=VA:PRINT Y
30140 IF TYP$="mkiv" THEN O1$="M,6,-10:G,800" ELSE O1$="B,3:M,10,-10:G,544"
30150 Y=Y-10:GOSUB 9450:GOSUB 9190
30160 IF(YY-VA)<>32 THEN 30130
30170 IF TYP$="mkiv" THEN O1$="M,6,10:G,800" ELSE O1$="B,3:M,10,10:G,544"
30180 Y=Y+10:GOSUB 9450:GOSUB 9190
30190 YY=VA:PRINT Y
30200 IF TYP$="mkiv" THEN O1$="M,6,-1:G,800" ELSE O1$="B,3:M,10,-1:G,544"
30210 Y=Y-1:GOSUB 9450:GOSUB 9190
30220 IF(YY-VA)<>32 THEN 30190
30230 B$="Found diode at step "+STR$(Y)+" Moving filterwheel #3 to "+MDD$+" position at "
30250 IF MDD$="o3" THEN B$=B$+STR$(MX%) ELSE B$=B$+STR$(NMX%)
30260 PRINT B$:PRINT#4,B$:GOSUB 3050:PRINT#4,
31000 ' Step for FW#3
31000 VAR7$=STR$(Y)
31020 IF TYP$="mkiii" THEN 31030 ELSE 31070
55555                          'FW#3 Position
31030   VAR8$=MID$(STR$(MX%),2)
31040   IF Q14%=0 THEN O1$="M,10,"+VAR8$:GOSUB 9450:O1$="B,0":GOSUB 9450:O1$="M,10,-1;M,10,2;M,10,-1:M,10,"+MC$
31050   IF Q14%=1 THEN O1$="M,6,"+VAR8$:GOSUB 9450:O1$="M,6,-1;M,6,2;M,6,-1:M,6,"+MC$
55555 REM Restore first micrometer pos
31060   GOSUB 9450:GOTO 31200
31070 IF MDD$="o3" THEN 31080 ELSE 31100
55555                          'FW#3 Position
31080   VAR8$=MID$(STR$(MX%),2)
31090   O1$="M,6,"+VAR8$:GOSUB 9450:GOTO 31200
55555                          'FW#3 Position
31100   VAR8$=MID$(STR$(NMX%),2)
31110   O1$="M,6,"+VAR8$:GOSUB 9450
31200 RETURN
55555 REM ***************** mtrupd routine 07/01/97 *****************
55555 REM 14/1/97 julian Uses several files now.
55555 REM 7/1/97 julian. custom made to be called inside re.rtn routine.
55555 REM 6 1 96 julian. dumps hex bytes from file
55555 REM *********************************************************
40000 DATA motrupd
40100 DUMPNB=2
40110 DUMPFN$(1)="ez140.COD":DUMPFN$(2)="x13d.cod"
40120 ON ERROR GOTO 60200
55555 REM OPEN DUMPFN$ for input as 8
40135 ON COM(CP%) GOSUB 60000:COM(CP%) ON
40140 OK=0:CH$="Q"+CR$:PRINT#7,CH$:PRINT CH$:REM goto RCAMonitor
55555 REM While OK=0:WEND:OK=0:REM wait for response from brewer
40147 FOR I=1 TO DUMPNB
40148 PRINT "Downloading file ";DUMPFN$(i)
40149 OPEN DUMPFN$(I) for input as 8
40150 WHILE NOT EOF(8)
40160   INPUT#8,A$
40166   IF INSTR(A$,"!") THEN WHILE OK=0:WEND:OK=0
40170   PRINT A$:jul=0:PRINT#7,A$+CR$
40180 WEND
55555 REM WHILE OK=0:WEND:OK=0
40187 CLOSE 8:Next I
40188 WHILE OK=0:WEND:OK=0
40190 ju2=0:A$="$P4020"+CR$:REM back to Brewer program
40200 PRINT A$:PRINT#7,A$
55555 ' *** Clean Up and Exit ***
43002 '
55555 REM CLOSE 8
43007 WHILE OK=0:WEND:OK=0
43010 GOSUB 50000:COM(CP%) OFF
43020 DUMPFN$="":REM INPUT"ready to go on?",A$
43030 RETURN
50000 '
55555 ' *** 0.5 Second Break ***
50002 '
50010 COM(CP%) OFF
50020 BV=INP(AD):OUT AD,(BV OR 64)
50030 X=0.5:GOSUB 7220
50040 BV=INP(AD):OUT AD,(BV AND 191)
50050 ON COM(CP%) GOSUB 60000:COM(CP%) ON
50060 PRINT#7,CR$;:X=0.2:GOSUB 7220
50070 RETURN
60000 REM communication routine
60000 I1$="":BC=1:ON ERROR GOTO 60220
60020 WHILE BC<>0
60030   BC=LOC(7):I2$=INPUT$(BC,7)
60040   I1$=I1$+I2$:I2$=""
60050 WEND
60060 PRINT I1$;
60065 jul=INSTR(I1$,"*")
60067 ju2=INSTR(I1$,">")
60069 IF (jul<>0) OR (ju2<>0) THEN OK=1
60070 ON ERROR GOTO 3100:RETURN
60200 PRINT "Filename does not exist":RESUME 43010
60220 RESUME 60060
55555 '
65529 REM proper last line
